{% extends "base.html" %}
{% block content %}
    {% from 'bootstrap5/form.html' import render_form, render_field, render_form_row %}

    <div class="row">

         <div class="col-7 mx-auto">
             <h2>Register</h2>
             {{ render_form(form) }}
         </div>

        <div class="col-5" >
            <div id="message" class = “red”>
                Password must contain
                <div class="progress" >
                    <div id="p-bar" class="progress-bar" style="width: 0" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
                </div>
                <p id="letter" class="invalid">A <b>lowercase</b> letter</p>
                <p id="capital" class="invalid">A <b>capital (uppercase)</b> letter</p>

<!--
                <p id="letter" class="invalid">A <b>lowercase</b> letter</p>
                <p id="capital" class="invalid">A <b>capital (uppercase)</b> letter</p>
                <p id="number" class="invalid">A <b>number</b></p>
                <p id="length" class="invalid">Minimum <b>8 characters</b></p>
                -->
            </div>
        </div>
    </div>



<style>
    /* The message box is shown when the user clicks on the password field */

    #message {
        display:none;
        background: #f1f1f1;
        color: #000;
        position: relative;
        padding: 20px;
        margin-top: 10px;
    }

    .valid{
        Color:green;
    }
    /*
    .valid:before {
        position: relative;
        left: -35px;
        content: "&#10004;";
    }
    */

    .invalid{
        Color: red;
    }

    /*
    .invalid:before {
        position: relative;
        left: -35px;
        content: "&#10006;";
    }*/

</style>

<script>
    //var message = document.getElementById("message");
    var passwordField = document.getElementById("password");
    var letter = document.getElementById("letter");
    let progress_bar = document.getElementById("p-bar");

    console.log(progress_bar);



    passwordField.onfocus = function () {
        document.getElementById("message").style.display = "block";
        //message.style.border = "1px solid"
    }

    passwordField.onkeyup = function () {
        //Validate lowercase letters
        let lowerCaseLetters = /[a-z]/g;

        let p_bar_width_string = progress_bar.style.width
        //console.log(p_bar_width_string);
        //missing rest of code
        let width_current_value = parseInt(p_bar_width_string.substring(0, p_bar_width_string, ));
        width_current_value = width_current_value + 33;
        let width_string_new_value = width_current_value.toString();
        //console.log(width_current_value);
        let new_width_value = width_current_value.concat("%");
        //console.log(new_width_current_value);


        if(passwordField.value.match(lowerCaseLetters)) {
            letter.classList.remove("invalid");
            letter.classList.add("valid");
            progress_bar.style.width = "new_width_value";
            console.log(progress_bar);

        } else {
            letter.classList.remove("valid");
            letter.classList.add("invalid");
            progress_bar.style.width = "0%";
        }


        // Validate capital letters
        var upperCaseLetters = /[A-Z]/g;
        if(passwordField.value.match(upperCaseLetters)) {
            capital.classList.remove("invalid");
            capital.classList.add("valid");
            progress_bar.style.width = "33%";
            console.log(progress_bar);
        } else {
            capital.classList.remove("valid");
            capital.classList.add("invalid");
            progress_bar.style.width = "0%";
        }
        /*

// Validate numbers
var numbers = /[0-9]/g;
if(passwordField.value.match(numbers)) {
    number.classList.remove("invalid");
    number.classList.add("valid");
} else {
    number.classList.remove("valid");
    number.classList.add("invalid");
}

// Validate length
if(passwordField.value.length >= 8) {
    length.classList.remove("invalid");
    length.classList.add("valid");
} else {
    length.classList.remove("valid");
    length.classList.add("invalid");
}
*/
    }

</script>

{% endblock %}
